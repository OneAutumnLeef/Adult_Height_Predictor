import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

# Galton data of parents' heights, child's age, gender, and children's heights
data = {
    "father_height": [78.5,78.5,78.5,78.5,75.5,75.5,75.5,75.5,75,75,75,75,75,75,75,75,75,75,75,75,75,74,74,74,74,74,74,74,74,74,74,74.5,74,74,74,74,74,74,74,74,74,74,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73.2,72.7,72.7,72.7,72.7,72.7,72.7,72.7,72.7,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72.5,72.5,72.5,72,72.5,72.5,72.5,72.5,72.5,72.5,72,72,72,72,72,72,72,72,72,72,72,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71.7,71,71,71,71,71,71,71.5,71.5,71.5,71.5,71,71,71,71,71,71,71,71,71,71,71,71.7,71.7,71.7,71.7,71,71,71,71.5,71.5,71.5,71.5,71.5,71.5,71.5,71.2,71.2,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70.5,70.5,70.5,70.5,70.5,70,70,70,70,70,70,70,70,70,70,70,70,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.3,70.3,70.3,70.3,70.3,70.3,70.3,70.5,70.5,70.5,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69.5,69.5,69.5,69.5,69,69,69,69,69,69,69.5,69.5,69.5,69.5,69.5,69.5,69.5,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69.5,69.5,69.5,69.5,69.5,69.5,69.5,69.2,69.2,69.2,69.2,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69.7,69.5,69.5,69.5,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69.5,69.5,69.5,69.5,69.5,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,68.7,68.7,68.5,68.5,68.5,68.5,68.5,68.5,68.5,68.5,68.5,68.5,68.5,68.5,68.5,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68.5,68.5,68.5,68.5,68.5,68.5,68.5,68.5,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68.5,68.5,68.5,68.5,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68.5,68,68.2,68.2,68.2,68.2,68.2,68,68.7,68.7,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68.5,68,68,68,68,68,68,68,68,68,68,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67.5,67.5,67.5,67.5,67.5,67.5,67.5,67.5,67.5,67.5,67.5,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67.5,67.5,67.5,67.5,67.5,67,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66.5,66.5,66.5,66.5,66.5,66.5,66.5,66.5,66,66,66,66,66,66,66,66,66.5,66.5,66.5,66.5,66.5,66.5,66.5,66.5,66.5,66.5,66.5,66.5,66.5,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65.5,65.5,65.5,65.5,65.5,65.5,65.5,65.5,65.5,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,62,62,62,62.5,62.5,68.5,68.5,68.5,68.5,68.5,68.5,68.5,68.5],
    "mother_height": [67,67,67,67,66.5,66.5,66.5,66.5,64,64,64,64,64,64,64,58.5,58.5,58.5,58.5,58.5,58.5,68,68,68,68,68,68,68,66.5,66.5,66.5,66,65.5,62,62,62,62,62,62,62,62,61,67,67,66.5,66.5,66.5,65,65,65,65,65,65,65,65,65,64.5,64.5,64.5,64.5,64.5,64.5,64,64,64,63,69,69,69,69,69,69,69,69,68,68,68,67,67,67,65,65,65,65,65,65,65,65.5,64,64,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63.5,63.5,63.5,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,61,69,69,69,69,69,67,67,67,67,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,65.5,65.5,65.5,65.5,65.5,65.5,65.5,65.5,65.5,65,65,65,65,65,64,64,64,64,64,64,64,64,64.5,64.5,64.5,64.5,64,64,64,64.5,64.5,64.5,64.5,64.5,64.5,64.5,63,63,63.5,63.5,63.5,63.5,63.5,63,63,63,63,63,63,63,63,63,63,63,63,63,62,62,62,62,62,62,62,62,62,62,62.5,62.5,62.5,62.5,62.5,62,62,62,62,62,62,62,61,58,58,69,69,69,69,69,69,69,69,69,69,68,67,67,67,67,67,67,66.5,66.5,66.5,66.5,66.5,66.5,66.5,66.5,66.5,66.5,66.5,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,64.7,64.7,64.7,64.7,64.7,64.7,64.7,64,64,64,64,64,64,64,64,64,64,64,64.2,64.2,64.2,64.2,64.2,64,64,64,64,64,64,64,64,64.5,64,64,64,64,64,64,64,64,64,64,64,64,64,63.7,63.7,63.7,63.7,63.7,63.7,63.7,63.7,63,63,63,63,63,63.5,63.5,63.5,63.5,63,63,63,63,63,63,63,63,62,62,62,62,62,62,62,62,62.7,62.7,62.7,62.7,62.7,62.7,62.7,62,62,62,61,61,60,60,60,60,60,60,58.5,58.5,58.5,58,58,58,58,58,68.5,68.5,68.5,68.5,68.5,68.5,68.5,68.5,68.5,68.5,67,66,66,66,66,66,66,66,66,66,66,66,66.7,66.7,66.7,66.7,66.7,66.7,66,66,66,66,66,66,66.5,66.5,66.5,66.5,66.5,66.5,66.5,66.5,66.5,66.5,66.5,66.5,66.5,66.5,66.5,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,65,65,65,65,65,65,65,64.5,64.5,64.5,64.5,64.5,64.5,64.5,64,64,64,64,63,63,63,63,63,63,63,63,63,63,63.5,63.5,63.5,63.5,63.5,63.5,63.5,63.5,63.5,63.5,62,62,62,62,62,62,62,62,62,62.5,62.5,62.5,62.5,62.5,62.5,62.5,62.5,62,62,62,62,61,61,61,61,61,61,61,61,61,61,61,61,61,61,60,60,60,60,60,60,60,60.5,70.5,70.5,67,67,67,66.5,66.5,66.5,66.5,66.5,66.5,66.5,66.5,66.5,66.5,65,65,65.5,65.5,65.5,65.5,65.5,65.5,65.5,65.5,65.5,65,65,65,65,65,65,65,65,65,65,65,65,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64.5,64,64,64,64,64,64,64,64,64,64,63,63,63,63,63,63,63,63,63.5,63.5,63.5,63.5,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63.5,63,63.5,63.5,63.5,63.5,63.5,62.5,62,62,62.5,61,61,61,61,61,60.2,60,60,60,60,60,60,60,60,60,60,60,59,59,59,59,59,59,59,59,59,59,59,66.2,66.2,66.2,66.2,66.2,66.5,65,65,65,65,65,65,65.5,65.5,65.5,65.5,65.5,65.5,65.5,65.5,65.5,65,65,65,65,65,65,65,65,65,65,65,65,65,65,64,64,64,64,63.5,63.5,63.5,63.5,63.5,63.5,63.5,63.5,63,63,63,62,62,62,62,62,61,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,66,66,66,66,66,66,66,66,66,66,66,65,65,65,65,65,65,65,65,65.5,65.5,65.5,65.5,65.5,63,63.5,63.5,63,63,63,63,63,63,62.5,62.5,62.5,62.5,62.5,62.5,62.5,61.5,60,60,60,60,60,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,67,67,67,67,67,66,66,66,66,65,65,65,65,65,65,65,65,65,65.5,65.5,65,65,65,65,65,65,64,64,64,64,64,64,63,63,63,63,63,63,63,63,63,60,60,60,60,60,64,64,64,64,64,64,64,64,64,64,64,64,64,64,63,60,60,66,66,66,63,63,65,65,65,65,65,65,65,65],
    "age
    "gender": ["M","F","F","F","M","M","F","F","M","F","M","M","F","F","F","M","M","M","F","F","F","F","M","M","M","M","F","F","F","F","F","F","F","M","M","F","F","F","F","F","F","F","M","M","M","M","F","M","M","M","M","M","F","F","F","F","M","M","M","M","F","F","F","F","F","F","M","M","M","F","F","F","F","F","M","F","F","M","M","F","M","M","M","F","F","F","F","F","F","F","M","M","M","F","F","M","M","F","M","M","F","F","F","F","F","F","F","F","M","M","M","F","F","F","M","M","M","F","F","M","M","M","M","F","F","M","M","M","M","F","M","M","M","F","M","F","F","F","M","M","M","F","F","F","M","F","M","M","M","M","F","M","M","M","M","M","F","F","M","F","M","M","M","M","F","F","F","F","F","F","F","F","F","M","M","M","F","M","M","M","M","M","M","F","F","F","F","F","F","M","M","F","F","F","M","M","M","M","F","F","F","F","F","M","M","M","F","M","M","F","F","F","M","M","M","F","F","M","F","F","F","F","M","M","M","M","M","F","F","F","M","M","M","M","M","F","M","M","F","F","F","F","M","M","M","F","F","F","F","M","M","M","M","F","F","F","F","F","F","F","M","M","M","M","F","F","F","F","F","M","M","M","M","M","F","F","F","M","M","F","F","F","M","M","F","F","F","F","M","M","M","F","F","F","F","M","M","F","M","M","M","M","M","F","F","F","F","M","M","M","M","M","M","F","M","M","M","F","M","M","F","F","F","M","M","M","M","M","M","F","F","F","M","F","F","F","M","M","M","M","M","M","F","F","F","M","M","M","F","F","F","F","F","M","M","M","F","F","M","M","F","F","M","M","F","F","M","M","F","F","M","M","M","M","M","F","F","F","M","M","M","M","F","F","F","M","M","F","M","M","M","M","F","F","F","F","M","M","F","M","M","F","F","F","M","M","M","F","F","F","F","F","F","F","F","M","M","M","M","F","F","F","F","M","M","M","M","M","M","M","M","M","M","M","M","F","F","F","M","M","M","M","F","M","M","F","F","M","F","F","F","F","F","M","M","M","M","F","F","F","M","M","M","M","F","F","F","F","F","M","M","M","F","F","F","F","M","M","M","F","F","F","F","M","M","F","F","M","F","F","M","M","M","M","M","F","F","M","M","M","F","F","F","F","M","F","F","F","M","M","M","M","M","M","M","F","M","M","M","M","F","F","F","F","M","M","F","F","M","M","M","F","F","M","M","M","M","M","M","F","F","F","M","F","F","M","M","F","F","M","M","F","M","M","F","M","M","M","M","M","M","M","M","M","F","M","M","M","F","M","M","M","M","F","F","F","M","M","F","F","M","M","M","M","F","F","F","F","M","M","M","M","F","F","F","F","F","F","M","M","F","F","M","M","M","M","F","F","M","M","M","F","F","F","F","F","F","F","M","M","M","M","M","F","F","F","M","M","M","F","M","M","M","F","F","M","M","M","M","M","F","F","F","M","M","M","F","F","F","M","M","M","M","M","M","F","M","M","F","M","M","M","M","F","F","M","M","F","F","F","F","F","F","M","M","M","F","M","M","M","M","M","M","M","F","F","F","F","M","M","M","F","F","M","M","M","F","F","F","F","M","M","F","F","F","M","M","F","F","M","F","F","M","M","F","F","F","F","F","F","F","F","F","M","M","M","M","M","M","M","M","M","M","M","F","M","M","F","M","M","M","M","F","M","M","M","M","M","M","F","F","F","M","M","M","F","F","F","F","F","F","M","M","F","F","F","M","M","F","F","F","F","M","M","M","M","F","F","F","F","M","M","M","F","F","M","F","F","M","M","M","F","F","F","M","M","F","F","F","F","F","M","M","M","M","F","M","M","M","M","M","M","M","M","F","F","F","F","F","F","F","F","M","M","M","F","F","M","F","F","F","M","M","M","F","F","F","F","F","F","M","F","M","M","M","M","F","F","M","M","F","F","F","F","M","F","M","M","F","M","M","M","F","M","M","M","M","F","M","M","F","F","F","F","F","M","M","F","F","F","F","F","M","M","F","M","F","F","M","F","M","M","M","M","M","F","F","F"],  # M for Male, F for Female
    "child_height": [73.2,69.2,69,69,73.5,72.5,65.5,65.5,71,68,70.5,68.5,67,64.5,63,72,69,68,66.5,62.5,62.5,69.5,76.5,74,73,73,70.5,64,70.5,68,66,66,65.5,74,70,68,67,67,66,63.5,63,65,68,67,71,70.5,66.7,72,70.5,70.2,70.2,69.2,68.7,66.5,64.5,63.5,74,73,71.5,62.5,66.5,62.3,66,64.5,64,62.7,73.2,73,72.7,70,69,68.5,68,66,73,68.5,68,73,71,67,74.2,70.5,69.5,66,65.5,65,65,65.5,66,63,70.5,70.5,69,65,63,69,67,63,73,67,70.5,70,66.5,63,67.5,67.2,66.7,64,71,70,70,66,65,65,74,72,69,67.5,63.5,72,71.5,71.5,70,68,65.7,78,74,73,72,67,73.2,73,69,67,70,67,67,66.5,70,69,68.5,66,64.5,63,71,67,76,72,71,66,66,70.5,72,72,71,69,66,65,73,65.2,68.5,67.7,68,68,62,68,68,67.5,66.5,66.5,66,65.5,65,72,71,70.5,67,68,68,68,72,71,70,66,64.5,64.5,62,67.5,64.5,71,67,66,65,63.5,71,70,70,64,65,65,64,63,63,71,71,70,63.5,71,70,64.5,62.5,61.5,72,70.5,70.5,64.5,60,70,64,64,64,62.5,70.5,70,69,69,66,64.5,64,62,71.5,69,71,70,69,69,70,68.7,68,66,64,62,75,70,69,66,64,60,67.5,73,72,72,66.5,69.2,67.2,66.5,66,66,64.2,63.7,72,70.2,69,68.5,68,65,61.5,61,61,73,72,70.5,65,65,64.5,63,62,67,65,64.5,62.5,62.5,70,70,67,65,65,63,79,75,71,69,67,65.7,62,73,72.5,65,69,69,72,70,68.7,66.5,65.5,64.7,64.5,70.7,70,68,67,66,65,67,70,68,66.7,65.5,72,70,62.5,61.2,60.1,74,69.5,69,68,68,68,65.5,65,60,68,65,64,62,71,70,70,70,69.5,68.5,69,65,64,70,67,65.5,63.7,63.2,62.5,62.2,61,72.5,69,67,64.5,64,71,67.5,67.5,63.5,68,67,63.7,62,70,66.5,62,61,72,70,69.5,69.5,68,65,64,63,70.7,69.7,69.2,65.2,64,63.5,63.2,72,72,60,71.2,67,67,64.5,65,63,65,65,71.5,64.5,63,72,66,66,65,63,75,71,70,66,66,65.5,65,65,64,64,64,73,72,71.7,71.5,65.5,65,62.7,62.5,71.2,71,70,75,74,72,68.5,67,66,70,68.5,68,65,63,62.5,73,71,70.5,70.5,61,70.5,67.5,64.5,64,71,68.5,67.5,66,63,63,71,71,70.5,70.5,66.5,65.5,64.5,73,72,69,69,66.5,65.5,65.5,65,64,70,68.5,67,65,64,63.5,61,69.7,68,60,65.2,64.5,63.7,60,71.7,66.5,65,63.5,69,67.5,63.5,72,73,70,70,64,66,62,70.5,67,66,65,63,62,61,70.5,63.7,63,62.5,73,72,69,73,71,71,69,63,71,70,70,69,63.5,62.5,62.5,62,72,68,66,66,70,69.5,69,63,62,68,68,67.5,64,63,63,63.5,62,62,70.5,68,62.5,69,66,61.7,60.5,69.5,71,61.7,73,71,67,70,69,69,68.7,68.5,68.5,68,68,68,63.2,67.5,66,66,64,71.7,71.5,70.7,65.5,66.5,65.2,61.5,72,72,68,66,69.2,68,66,66,62,61.5,61,60,71,68,68,67,65,64,63,63,62,61,66,63,65.5,62,71.2,71.2,69,68.5,62.5,62,69,67,66,66,66,65,65,65,64,63,70.5,70,68,66,66,66,62,61.5,73.5,70,69.5,65.5,67,70,68,64.5,64,71,68,66,65.5,65,63,62,62,67,67,66,64,63.5,61,68.2,70,70,69,67,65.5,64.5,68.5,67.7,61.7,66.5,68.5,68,64,63.5,63,66.7,64,61,61,60,60,60,56,67.5,67,66.5,60,69,68,65,64.7,64,64,63,65,65,62,61,72.7,72.7,71.5,65.5,63.5,71,69.7,67.5,65.5,65,64.5,63.5,70,69,65.5,65.5,63,70,67.7,63,60,65,62,62,71,69,64,64,63,63,63,63,63,62.5,62,71.5,70,67,67,71,70.2,69.2,68.5,68,67,65.5,63.5,69,68,63,70,69.5,69,68.5,66,67,70.5,70.5,67,66,66,62,62,61.5,72,65,65,67,64,64,62,60,60,66,65,67,66.5,65.5,72,68,66,65,62,61,68.7,68.5,66.5,64.5,62.5,60.5,60.5,57.5,72,71,67,66,65,70,64.5,62,67.2,67,65,65,65,63,70,68,63.5,62.5,62.5,62.5,62.5,70,68,67,65,60,65,68,67,66.5,66,65.7,65.5,65,65,64,63,62,61,60,58,57,66.5,66,66,65,63,63,63,63,60,69,68,68,65,65,62,62,61,59,70.7,65.5,69.2,69,68,67.7,64.5,60.5,67,67,64,64,62.5,60.5,70,63,66,66,63,71,71,69,63.5,68,68,67,67,62,71.5,68,65.5,64,62,62,61,70.5,68,67,65,64,64,60,64.5,66,60,64,62,61,66.5,57,72,70.5,68.7,68.5,67.7,64,63.5,63]  # Actual child heights at corresponding ages
}

df = pd.DataFrame(data)

# Convert gender to binary (0 for Male, 1 for Female)
df["gender_bin"] = (df["gender"] == "F").astype(int)

# Features (parents' heights, age, and gender)
X = df[["father_height", "mother_height", "age", "gender_bin"]]

# Target variable (child's height)
y = df["child_height"]

# Initialize the linear regression model
model = LinearRegression()

# Fitting the model
model.fit(X, y)

Pops=float(input("Enter the Height of your father: "))
Mum=float(input("Enter the Height of your Mother: "))
Gen=input("Gender (M/F): ")

Pops_in = Pops*0.393701
Mum_in = Mum*0.393701

# Now, you can predict the child's height for new data
new_data = {
    "father_height": [Pops_in],
    "mother_height": [Mum_in],
    "age": [18],
    "gender": [Gen]  # "M" for Male, "F" for Female
}

new_df = pd.DataFrame(new_data)
new_df["gender_bin"] = (new_df["gender"] == "F").astype(int)
predicted_height = model.predict(new_df[["father_height", "mother_height", "age", "gender_bin"]])

print("Predicted child's height:", predicted_height[0]*2.54,"cm")

# Scatter plot and regression line
plt.scatter(df["father_height"], df["child_height"], label="Actual Data")
plt.xlabel("Father's Height (in)")
plt.ylabel("Child's Height (in)")
plt.title("Relationship between Father's Height and Child's Height")
plt.grid(True)

# Generate the regression line
regression_line = model.predict(X)
plt.plot(df["father_height"], regression_line, color='red', label="Regression Line")

# Plot the new data point
plt.scatter(Pops_in, predicted_height[0], color='green', label="Predicted Data")

plt.legend()
plt.show()
